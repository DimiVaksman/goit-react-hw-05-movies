{"version":3,"file":"static/js/736.44903a9d.chunk.js","mappings":"yRAGaA,EAAOC,EAAAA,EAAAA,GAAH,qIAQJC,EAASD,EAAAA,EAAAA,IAAH,gKAONE,EAAgBF,EAAAA,EAAAA,IAAH,gIAMbG,EAAQH,EAAAA,EAAAA,KAAH,6IAOLI,EAAOJ,EAAAA,EAAAA,KAAH,sI,SCqBjB,EA/Ca,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,gHAEIC,EAAAA,EAAAA,GAAUP,GAFd,gBAEXG,EAFW,EAEXA,KACRC,EAAQD,GAHW,yGAAH,qDAOpBG,GACD,GAAE,CAACN,KAGF,yBAEGG,EAAKK,QACJ,SAACd,EAAD,UACGS,EAAKM,KAAI,SAAAC,GAAK,OACb,0BACGA,EAAMC,cACL,SAACf,EAAD,CACEgB,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAG,UAAKH,EAAMI,KAAX,eAGL,SAAClB,EAAD,CACEgB,IAAG,oDACHC,IAAG,UAAKH,EAAMI,KAAX,eAGP,UAACjB,EAAD,YACA,SAACC,EAAD,oBADA,OACuB,SAACC,EAAD,UAAOW,EAAMI,OADpC,KACiD,mBAC/C,SAAChB,EAAD,wBAFF,OAE6B,SAACC,EAAD,UAAOW,EAAMK,iBAdnCL,EAAMM,GADF,OAqBjB,8EAIP,C,iMChDKC,EAAW,6BACXC,EAAU,mCAEDC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,kEACsCF,IAF/B,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAUhBC,EAAW,mCAAG,WAAMC,GAAN,yFACFH,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,yBACwDK,EADxD,gCADE,uBACjBF,EADiB,EACjBA,KADiB,kBAKlBA,GALkB,2CAAH,sDAsBXd,EAAS,mCAAG,WAAMP,GAAN,yFACAoB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEjB,EADF,4BAC6BkB,EAD7B,oBADA,uBACfG,EADe,EACfA,KAGRG,QAAQC,IAAIJ,GAJW,kBAMhBA,GANgB,2CAAH,sDASTK,EAAY,mCAAG,WAAM1B,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEjB,EADF,4BAC6BkB,EAD7B,oBADG,uBAClBG,EADkB,EAClBA,KAGRG,QAAQC,IAAIJ,GAJc,kBAMnBA,GANmB,2CAAH,sDASZM,EAAiB,mCAAG,WAAM3B,GAAN,yFACRoB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEjB,EADF,oBACqBkB,EADrB,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","servieces/MovieAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const List = styled.ul`\npadding-top: 40px;\ndisplay: flex;\njustify-content: center;\nflex-wrap: wrap;\nlist-style: none;\ngap: 45px;`\n\nexport const Poster = styled.img`\nborder-radius: 50px;\n-webkit-box-shadow: 5px 5px 15px 5px #000000;\n    box-shadow: 5px 5px 15px 5px #000000;\n    margin-bottom: 20px;`\n\n\nexport const TextContainer = styled.div`\nborder: 1px solid transparent;\nborder-radius: 30px;\npadding: 8px;\nbackground-color: rgb(8, 140, 247);`\n\nexport const Actor = styled.span`\ntext-align: center;\nfont-size: 14px;\ncolor: rgba(254, 99, 134, 80);\ntext-shadow: 1px 5px 7px rgba(0, 0, 0, 0.6);\n`\n\nexport const Name = styled.span`\ntext-align: center;\nfont-size: 18px;\ncolor: rgb(163 238 23);\ntext-shadow: 1px 5px 7px rgba(0, 0, 0, 0.6);\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'servieces/MovieAPI';\nimport { List , Poster, TextContainer,Actor, Name} from \"./Cast.styled\"\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const { cast } = await fetchCast(movieId);\n        setCast(cast);\n      } catch (error) {}\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n\n      {cast.length ? (\n        <List>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              {actor.profile_path ? (\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                <Poster\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n              <TextContainer>\n              <Actor>Actor</Actor> : <Name>{actor.name}</Name> <br />\n                <Actor>Character</Actor> : <Name>{actor.character}</Name>\n              </TextContainer>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <p>We don't have any information about the cast yet.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '7510784cb92b403b6cb85c091d4aabc9';\n\n  export const fetchTrendMovies = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n  \n    return data;\n  };\n\n\n\n  export const fetchMovies = async query => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&page=1&query=${query}&page=1&include_adult=false`\n    );\n  \n    return data;\n  };\n\n\n\n\n  export const fetchPoster = async () => {\n    const { data } = await axios.get(\n      `https://image.tmdb.org/t/p/original/`\n    );\n    console.log(data);\n  \n    return data;\n  };\n\n\n\n  export const fetchCast = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    console.log(data);\n  \n    return data;\n  };\n\n  export const fetchReviews = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    console.log(data);\n  \n    return data;\n  };\n\n  export const fetchMovieDetails = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1`\n    );\n  \n    return data;\n  };"],"names":["List","styled","Poster","TextContainer","Actor","Name","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","fetchCast","length","map","actor","profile_path","src","alt","name","character","id","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovies","query","console","log","fetchReviews","fetchMovieDetails"],"sourceRoot":""}