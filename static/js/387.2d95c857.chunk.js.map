{"version":3,"file":"static/js/387.2d95c857.chunk.js","mappings":"qRAEaA,EAAOC,EAAAA,EAAAA,GAAH,6CAIJC,EAASD,EAAAA,EAAAA,GAAH,8HAMNE,EAAUF,EAAAA,EAAAA,EAAH,iJ,SC8BpB,EApCiB,WACf,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gHAEIC,EAAAA,EAAAA,IAAaP,GAFjB,gBAEdQ,EAFc,EAEdA,QACRJ,EAAWI,GAHW,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDASvBJ,GACD,GAAE,CAACN,KAGF,yBACGG,EAAQQ,QACP,SAACf,EAAD,UACGO,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,SAACf,EAAD,UAASe,EAAOC,UAEhB,SAACf,EAAD,UAAUc,EAAOE,YAHVF,EAAOG,GADC,OASrB,SAACjB,EAAD,oEAIP,C,iMCtCKkB,EAAW,6BACXC,EAAU,mCAEDC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,kEACsCF,IAF/B,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAUhBC,EAAW,mCAAG,WAAMC,GAAN,yFACFH,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,yBACwDK,EADxD,gCADE,uBACjBF,EADiB,EACjBA,KADiB,kBAKlBA,GALkB,2CAAH,sDAsBXG,EAAS,mCAAG,WAAMxB,GAAN,yFACAoB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEjB,EADF,4BAC6BkB,EAD7B,oBADA,uBACfG,EADe,EACfA,KAGRZ,QAAQC,IAAIW,GAJW,kBAMhBA,GANgB,2CAAH,sDASTd,EAAY,mCAAG,WAAMP,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEjB,EADF,4BAC6BkB,EAD7B,oBADG,uBAClBG,EADkB,EAClBA,KAGRZ,QAAQC,IAAIW,GAJc,kBAMnBA,GANmB,2CAAH,sDASZI,EAAiB,mCAAG,WAAMzB,GAAN,yFACRoB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEjB,EADF,oBACqBkB,EADrB,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","servieces/MovieAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Author = styled.h2`\n  color: rgba(254, 99, 134, 80);\n  font-size: 34px;\n  text-shadow: 1px 5px 7px rgba(0, 0, 0, 0.6);\n`;\n\nexport const Content = styled.p`\n    color: rgb(8, 140, 247);\n  font-size: 18px;\n  text-shadow: 1px 5px 7px rgba(0, 0, 0, 0.6);\n  text-align: center;\n`;\n","\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'servieces/MovieAPI';\nimport { List,Author, Content } from './Reviews.styled';\n\n const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const { results } = await fetchReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length ? (\n        <List>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <Author>{review.author}</Author>\n\n              <Content>{review.content}</Content>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <Content>We don't have any information about the reviews yet.</Content>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '7510784cb92b403b6cb85c091d4aabc9';\n\n  export const fetchTrendMovies = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n  \n    return data;\n  };\n\n\n\n  export const fetchMovies = async query => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&page=1&query=${query}&page=1&include_adult=false`\n    );\n  \n    return data;\n  };\n\n\n\n\n  export const fetchPoster = async () => {\n    const { data } = await axios.get(\n      `https://image.tmdb.org/t/p/original/`\n    );\n    console.log(data);\n  \n    return data;\n  };\n\n\n\n  export const fetchCast = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    console.log(data);\n  \n    return data;\n  };\n\n  export const fetchReviews = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    console.log(data);\n  \n    return data;\n  };\n\n  export const fetchMovieDetails = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1`\n    );\n  \n    return data;\n  };"],"names":["List","styled","Author","Content","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","fetchReviews","results","console","log","length","map","review","author","content","id","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovies","query","fetchCast","fetchMovieDetails"],"sourceRoot":""}